[{"C:\\Users\\rons9\\OneDrive\\Área de Trabalho\\PROJS\\Portfolio\\Trackr\\src\\index.js":"1","C:\\Users\\rons9\\OneDrive\\Área de Trabalho\\PROJS\\Portfolio\\Trackr\\src\\App.js":"2","C:\\Users\\rons9\\OneDrive\\Área de Trabalho\\PROJS\\Portfolio\\Trackr\\src\\context\\context.js":"3","C:\\Users\\rons9\\OneDrive\\Área de Trabalho\\PROJS\\Portfolio\\Trackr\\src\\styles.js":"4","C:\\Users\\rons9\\OneDrive\\Área de Trabalho\\PROJS\\Portfolio\\Trackr\\src\\context\\contextReducer.js":"5","C:\\Users\\rons9\\OneDrive\\Área de Trabalho\\PROJS\\Portfolio\\Trackr\\src\\components\\Main\\Main.jsx":"6","C:\\Users\\rons9\\OneDrive\\Área de Trabalho\\PROJS\\Portfolio\\Trackr\\src\\components\\Details\\Details.jsx":"7","C:\\Users\\rons9\\OneDrive\\Área de Trabalho\\PROJS\\Portfolio\\Trackr\\src\\components\\Main\\styles.js":"8","C:\\Users\\rons9\\OneDrive\\Área de Trabalho\\PROJS\\Portfolio\\Trackr\\src\\components\\Details\\styles.js":"9","C:\\Users\\rons9\\OneDrive\\Área de Trabalho\\PROJS\\Portfolio\\Trackr\\src\\components\\Main\\Form\\Form.jsx":"10","C:\\Users\\rons9\\OneDrive\\Área de Trabalho\\PROJS\\Portfolio\\Trackr\\src\\components\\Main\\List\\List.jsx":"11","C:\\Users\\rons9\\OneDrive\\Área de Trabalho\\PROJS\\Portfolio\\Trackr\\src\\components\\Main\\List\\styles.js":"12","C:\\Users\\rons9\\OneDrive\\Área de Trabalho\\PROJS\\Portfolio\\Trackr\\src\\components\\Main\\Form\\styles.js":"13","C:\\Users\\rons9\\OneDrive\\Área de Trabalho\\PROJS\\Portfolio\\Trackr\\src\\constants\\categories.js":"14","C:\\Users\\rons9\\OneDrive\\Área de Trabalho\\PROJS\\Portfolio\\Trackr\\src\\Utils\\formatDate.js":"15","C:\\Users\\rons9\\OneDrive\\Área de Trabalho\\PROJS\\Portfolio\\Trackr\\src\\useTransactions.js":"16","C:\\Users\\rons9\\OneDrive\\Área de Trabalho\\PROJS\\Portfolio\\Trackr\\src\\components\\InfoCard.jsx":"17"},{"size":430,"mtime":1610498084303,"results":"18","hashOfConfig":"19"},{"size":1011,"mtime":1610579090344,"results":"20","hashOfConfig":"19"},{"size":2350,"mtime":1609894167866,"results":"21","hashOfConfig":"19"},{"size":571,"mtime":1609894167868,"results":"22","hashOfConfig":"19"},{"size":603,"mtime":1609894167866,"results":"23","hashOfConfig":"19"},{"size":1269,"mtime":1610853006464,"results":"24","hashOfConfig":"19"},{"size":682,"mtime":1610495601148,"results":"25","hashOfConfig":"19"},{"size":507,"mtime":1609894167865,"results":"26","hashOfConfig":"19"},{"size":237,"mtime":1609894167863,"results":"27","hashOfConfig":"19"},{"size":4457,"mtime":1610852442753,"results":"28","hashOfConfig":"19"},{"size":1401,"mtime":1609976861748,"results":"29","hashOfConfig":"19"},{"size":412,"mtime":1610497459318,"results":"30","hashOfConfig":"19"},{"size":244,"mtime":1609894167864,"results":"31","hashOfConfig":"19"},{"size":1691,"mtime":1610404366977,"results":"32","hashOfConfig":"19"},{"size":299,"mtime":1610498005520,"results":"33","hashOfConfig":"19"},{"size":1122,"mtime":1610494144984,"results":"34","hashOfConfig":"19"},{"size":458,"mtime":1610853097334,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"cunagy",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"38"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"38"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"38"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"C:\\Users\\rons9\\OneDrive\\Área de Trabalho\\PROJS\\Portfolio\\Trackr\\src\\index.js",[],["75","76"],"C:\\Users\\rons9\\OneDrive\\Área de Trabalho\\PROJS\\Portfolio\\Trackr\\src\\App.js",[],"C:\\Users\\rons9\\OneDrive\\Área de Trabalho\\PROJS\\Portfolio\\Trackr\\src\\context\\context.js",[],"C:\\Users\\rons9\\OneDrive\\Área de Trabalho\\PROJS\\Portfolio\\Trackr\\src\\styles.js",[],"C:\\Users\\rons9\\OneDrive\\Área de Trabalho\\PROJS\\Portfolio\\Trackr\\src\\context\\contextReducer.js",[],"C:\\Users\\rons9\\OneDrive\\Área de Trabalho\\PROJS\\Portfolio\\Trackr\\src\\components\\Main\\Main.jsx",["77","78","79"],"import React, { useState, useEffect, useContext } from 'react';\r\nimport { Card, CardHeader, CardContent, Typography, Grid, Divider } from '@material-ui/core';\r\nimport { useSpeechContext } from '@speechly/react-client';\r\nimport { ExpenseTrackerContext } from '../../context/context';\r\nimport useStyles from './styles';\r\nimport Form from './Form/Form';\r\nimport List from './List/List';\r\nimport InfoCard from '../InfoCard';\r\n\r\nconst ExpenseTracker = () => {\r\n  const classes = useStyles();\r\n  const { balance } = useContext(ExpenseTrackerContext);\r\n\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardHeader title=\"Expense Tracker\" subheader=\"Powered by Speechly\" />\r\n      <CardContent>\r\n        <Typography align=\"center\" variant=\"h5\">Total Balance ${balance}</Typography>\r\n        <Typography variant=\"subtitle1\" style={{ lineHeight: '1.5em', marginTop: '20px' }}>\r\n          <InfoCard />\r\n        </Typography>\r\n        <Divider className={classes.divider} />\r\n        <Form />\r\n      </CardContent>\r\n      <CardContent className={classes.cartContent}>\r\n        <Grid container spacing={2}>\r\n          <Grid item xs={12}>\r\n            <List />\r\n          </Grid>\r\n        </Grid>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default ExpenseTracker;","C:\\Users\\rons9\\OneDrive\\Área de Trabalho\\PROJS\\Portfolio\\Trackr\\src\\components\\Details\\Details.jsx",[],"C:\\Users\\rons9\\OneDrive\\Área de Trabalho\\PROJS\\Portfolio\\Trackr\\src\\components\\Main\\styles.js",[],"C:\\Users\\rons9\\OneDrive\\Área de Trabalho\\PROJS\\Portfolio\\Trackr\\src\\components\\Details\\styles.js",[],"C:\\Users\\rons9\\OneDrive\\Área de Trabalho\\PROJS\\Portfolio\\Trackr\\src\\components\\Main\\Form\\Form.jsx",["80"],"import React, {useState, useEffect, useContext} from 'react';\r\nimport {\r\n  TextField,\r\n  Typography,\r\n  Grid,\r\n  Button,\r\n  FormControl,\r\n  InputLabel,\r\n  Select,\r\n  MenuItem\r\n} from '@material-ui/core';\r\nimport { ExpenseTrackerContext} from '../../../context/context'\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { useSpeechContext } from '@speechly/react-client';\r\n\r\nimport formatDate from '../../../Utils/formatDate';\r\nimport useStyles from './styles';\r\nimport { incomeCategories, expenseCategories } from '../../../constants/categories';\r\n\r\nconst initialState = {\r\n  amount: '',\r\n  category: '',\r\n  type: 'Income',\r\n  date: formatDate(new Date())\r\n}\r\n\r\nconst Form = () => {\r\n  const classes = useStyles();\r\n  const [formData, setFormData] = useState(initialState);\r\n  const { addTransaction } = useContext(ExpenseTrackerContext);\r\n  const { segment } = useSpeechContext();\r\n\r\n  const createTransaction = () => {\r\n    if(Number.isNaN(Number(formData.amount)) || !formData.date.includes('-')) return;\r\n    const transaction = { ...formData, amount: Number(formData.amount), id: uuidv4() }\r\n\r\n    addTransaction(transaction);\r\n    setFormData(initialState);\r\n  }\r\n\r\n  useEffect(() => {\r\n    if(segment) {\r\n      if(segment.intent.intent === 'add_expense') {\r\n        setFormData({ ...formData, type: 'Expense'});\r\n      } else if(segment.intent.intent === 'add_income') {\r\n        setFormData({ ...formData, type: 'Income'});\r\n      } else if(segment.isFinal && segment.intent.intent === \"create_transaction\") {\r\n        return createTransaction();\r\n      } else if(segment.isFinal && segment.intent.intent === \"cancel_transaction\") {\r\n        return setFormData(initialState);\r\n      }\r\n\r\n      segment.entities.forEach((e) => {\r\n        const category = `${e.value.charAt(0)}${e.value.slice(1).toLowerCase()}`;\r\n        switch (e.type) {\r\n          case 'amount':\r\n            setFormData({ ...formData, amount: e.value });\r\n          break;\r\n          case 'category':\r\n            if(incomeCategories.map((iC) => iC.type).includes(category)) {\r\n              setFormData({ ...formData, type: 'Income', category });\r\n            } else if (expenseCategories.map((iC) => iC.type).includes(category)) {\r\n              setFormData({ ...formData, type: 'Expense', category });\r\n            }\r\n            setFormData({ ...formData, category });\r\n          break;\r\n          case 'date':\r\n            setFormData({ ...formData, date: e.value });\r\n            break;\r\n          default:\r\n            break;\r\n        }\r\n      });\r\n\r\n      if(segment.isFinal && formData.amount && formData.category && formData.type && formData.date)\r\n        createTransaction();\r\n    }\r\n  }, [segment]);\r\n\r\n  const selectedCategories = formData.type === 'Income' ? incomeCategories : expenseCategories;\r\n\r\n  return (\r\n    <Grid container spacing={2}>\r\n      <Grid item xs={12}>\r\n        <Typography align='center' variant='subtitle2' gutterBottom>\r\n          {segment && segment.words.map((w) => w.value).join(\" \")}\r\n        </Typography>\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <FormControl fullWidth>\r\n          <InputLabel>Type</InputLabel>\r\n          <Select value={FormData.type} onChange={(e) => setFormData({ ...FormData, type: e.target.value })}>\r\n            <MenuItem value='Income'>Income</MenuItem>\r\n            <MenuItem value='Expense'>Expense</MenuItem>\r\n          </Select>\r\n        </FormControl>\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <FormControl fullWidth>\r\n          <InputLabel>Category</InputLabel>\r\n          <Select value={FormData.category} onChange={(e) => setFormData({ ...formData, category: e.target.value })}>\r\n           {selectedCategories.map((c) => <MenuItem key={c.type} value={c.type}>{c.type}</MenuItem>)}\r\n          </Select>\r\n        </FormControl>\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <TextField type='number' label='Amount' fullWidth value={formData.amount} onChange={(e) => setFormData({ ...formData, amount: e.target.value })} />\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <TextField type='date' label='Date' fullWidth value={formData.date} onChange={(e) => setFormData({ ...formData, date: formatDate(e.target.value)})} /> \r\n      </Grid>\r\n      <Button\r\n        className={classes.button}\r\n        variant='outlined'\r\n        color='primary'\r\n        fullWidth\r\n        onClick={createTransaction}\r\n      >\r\n        Create\r\n      </Button>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n","C:\\Users\\rons9\\OneDrive\\Área de Trabalho\\PROJS\\Portfolio\\Trackr\\src\\components\\Main\\List\\List.jsx",[],"C:\\Users\\rons9\\OneDrive\\Área de Trabalho\\PROJS\\Portfolio\\Trackr\\src\\components\\Main\\List\\styles.js",[],["81","82"],"C:\\Users\\rons9\\OneDrive\\Área de Trabalho\\PROJS\\Portfolio\\Trackr\\src\\components\\Main\\Form\\styles.js",[],"C:\\Users\\rons9\\OneDrive\\Área de Trabalho\\PROJS\\Portfolio\\Trackr\\src\\constants\\categories.js",[],"C:\\Users\\rons9\\OneDrive\\Área de Trabalho\\PROJS\\Portfolio\\Trackr\\src\\Utils\\formatDate.js",["83"],"export default (date) => {\r\n  const d = new Date(date);\r\n  let month = `${d.getMonth() + 1}`;\r\n  let day = `${d.getDate()}`;\r\n  const year = d.getFullYear();\r\n\r\n  if (month.length < 2) { month = `0${month}`; }\r\n  if (day.length < 2) { day = `0${day}`; }\r\n\r\n  return [year, month, day].join('-');\r\n};","C:\\Users\\rons9\\OneDrive\\Área de Trabalho\\PROJS\\Portfolio\\Trackr\\src\\useTransactions.js",[],"C:\\Users\\rons9\\OneDrive\\Área de Trabalho\\PROJS\\Portfolio\\Trackr\\src\\components\\InfoCard.jsx",[],{"ruleId":"84","replacedBy":"85"},{"ruleId":"86","replacedBy":"87"},{"ruleId":"88","severity":1,"message":"89","line":1,"column":17,"nodeType":"90","messageId":"91","endLine":1,"endColumn":25},{"ruleId":"88","severity":1,"message":"92","line":1,"column":27,"nodeType":"90","messageId":"91","endLine":1,"endColumn":36},{"ruleId":"88","severity":1,"message":"93","line":3,"column":10,"nodeType":"90","messageId":"91","endLine":3,"endColumn":26},{"ruleId":"94","severity":1,"message":"95","line":78,"column":6,"nodeType":"96","endLine":78,"endColumn":15,"suggestions":"97"},{"ruleId":"84","replacedBy":"98"},{"ruleId":"86","replacedBy":"99"},{"ruleId":"100","severity":1,"message":"101","line":1,"column":1,"nodeType":"102","endLine":11,"endColumn":3},"no-native-reassign",["103"],"no-negated-in-lhs",["104"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'useSpeechContext' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'createTransaction' and 'formData'. Either include them or remove the dependency array. You can also do a functional update 'setFormData(f => ...)' if you only need 'formData' in the 'setFormData' call.","ArrayExpression",["105"],["103"],["104"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation",{"desc":"106","fix":"107"},"Update the dependencies array to be: [createTransaction, formData, segment]",{"range":"108","text":"109"},[2674,2683],"[createTransaction, formData, segment]"]
[{"C:\\Users\\rons9\\OneDrive\\Área de Trabalho\\PROJS\\Portfolio\\Trackr\\src\\index.js":"1","C:\\Users\\rons9\\OneDrive\\Área de Trabalho\\PROJS\\Portfolio\\Trackr\\src\\App.js":"2","C:\\Users\\rons9\\OneDrive\\Área de Trabalho\\PROJS\\Portfolio\\Trackr\\src\\context\\context.js":"3","C:\\Users\\rons9\\OneDrive\\Área de Trabalho\\PROJS\\Portfolio\\Trackr\\src\\styles.js":"4","C:\\Users\\rons9\\OneDrive\\Área de Trabalho\\PROJS\\Portfolio\\Trackr\\src\\context\\contextReducer.js":"5","C:\\Users\\rons9\\OneDrive\\Área de Trabalho\\PROJS\\Portfolio\\Trackr\\src\\components\\Main\\Main.jsx":"6","C:\\Users\\rons9\\OneDrive\\Área de Trabalho\\PROJS\\Portfolio\\Trackr\\src\\components\\Details\\Details.jsx":"7","C:\\Users\\rons9\\OneDrive\\Área de Trabalho\\PROJS\\Portfolio\\Trackr\\src\\components\\Main\\styles.js":"8","C:\\Users\\rons9\\OneDrive\\Área de Trabalho\\PROJS\\Portfolio\\Trackr\\src\\components\\Details\\styles.js":"9","C:\\Users\\rons9\\OneDrive\\Área de Trabalho\\PROJS\\Portfolio\\Trackr\\src\\components\\Main\\Form\\Form.jsx":"10","C:\\Users\\rons9\\OneDrive\\Área de Trabalho\\PROJS\\Portfolio\\Trackr\\src\\components\\Main\\List\\List.jsx":"11","C:\\Users\\rons9\\OneDrive\\Área de Trabalho\\PROJS\\Portfolio\\Trackr\\src\\components\\Main\\List\\styles.js":"12","C:\\Users\\rons9\\OneDrive\\Área de Trabalho\\PROJS\\Portfolio\\Trackr\\src\\components\\Main\\Form\\styles.js":"13","C:\\Users\\rons9\\OneDrive\\Área de Trabalho\\PROJS\\Portfolio\\Trackr\\src\\constants\\categories.js":"14","C:\\Users\\rons9\\OneDrive\\Área de Trabalho\\PROJS\\Portfolio\\Trackr\\src\\Utils\\formatDate.js":"15","C:\\Users\\rons9\\OneDrive\\Área de Trabalho\\PROJS\\Portfolio\\Trackr\\src\\useTransactions.js":"16","C:\\Users\\rons9\\OneDrive\\Área de Trabalho\\PROJS\\Portfolio\\Trackr\\src\\components\\InfoCard.jsx":"17","C:\\Users\\rons9\\OneDrive\\Área de Trabalho\\PROJS\\Portfolio\\Trackr\\src\\components\\Snackbar\\Snackbar.jsx":"18","C:\\Users\\rons9\\OneDrive\\Área de Trabalho\\PROJS\\Portfolio\\Trackr\\src\\components\\Snackbar\\styles.js":"19","C:\\Users\\rons9\\OneDrive\\Área de Trabalho\\PROJS\\Portfolio\\Trackr\\src\\components\\index.js":"20","C:\\Users\\rons9\\OneDrive\\Área de Trabalho\\PROJS\\Portfolio\\Trackr\\src\\utils\\formatDate.js":"21"},{"size":430,"mtime":1610498084303,"results":"22","hashOfConfig":"23"},{"size":1670,"mtime":1611195851999,"results":"24","hashOfConfig":"23"},{"size":2350,"mtime":1610855403622,"results":"25","hashOfConfig":"23"},{"size":950,"mtime":1611196439243,"results":"26","hashOfConfig":"23"},{"size":603,"mtime":1609894167866,"results":"27","hashOfConfig":"23"},{"size":1175,"mtime":1610855375725,"results":"28","hashOfConfig":"23"},{"size":682,"mtime":1610495601148,"results":"29","hashOfConfig":"23"},{"size":507,"mtime":1609894167865,"results":"30","hashOfConfig":"23"},{"size":237,"mtime":1609894167863,"results":"31","hashOfConfig":"23"},{"size":4940,"mtime":1610855193170,"results":"32","hashOfConfig":"23"},{"size":1401,"mtime":1609976861748,"results":"33","hashOfConfig":"23"},{"size":412,"mtime":1610497459318,"results":"34","hashOfConfig":"23"},{"size":244,"mtime":1609894167864,"results":"35","hashOfConfig":"23"},{"size":1691,"mtime":1610404366977,"results":"36","hashOfConfig":"23"},{"size":299,"mtime":1610498005520,"results":"37","hashOfConfig":"23"},{"size":1122,"mtime":1610494144984,"results":"38","hashOfConfig":"23"},{"size":458,"mtime":1610853097334,"results":"39","hashOfConfig":"23"},{"size":795,"mtime":1610853279948,"results":"40","hashOfConfig":"23"},{"size":204,"mtime":1610853399132,"results":"41","hashOfConfig":"23"},{"size":214,"mtime":1610854679185,"results":"42","hashOfConfig":"23"},{"size":299,"mtime":1610498005520,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"cunagy",{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"46"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"77"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"46"},"C:\\Users\\rons9\\OneDrive\\Área de Trabalho\\PROJS\\Portfolio\\Trackr\\src\\index.js",[],["90","91"],"C:\\Users\\rons9\\OneDrive\\Área de Trabalho\\PROJS\\Portfolio\\Trackr\\src\\App.js",[],"C:\\Users\\rons9\\OneDrive\\Área de Trabalho\\PROJS\\Portfolio\\Trackr\\src\\context\\context.js",[],"C:\\Users\\rons9\\OneDrive\\Área de Trabalho\\PROJS\\Portfolio\\Trackr\\src\\styles.js",[],"C:\\Users\\rons9\\OneDrive\\Área de Trabalho\\PROJS\\Portfolio\\Trackr\\src\\context\\contextReducer.js",[],"C:\\Users\\rons9\\OneDrive\\Área de Trabalho\\PROJS\\Portfolio\\Trackr\\src\\components\\Main\\Main.jsx",[],"C:\\Users\\rons9\\OneDrive\\Área de Trabalho\\PROJS\\Portfolio\\Trackr\\src\\components\\Details\\Details.jsx",[],"C:\\Users\\rons9\\OneDrive\\Área de Trabalho\\PROJS\\Portfolio\\Trackr\\src\\components\\Main\\styles.js",[],"C:\\Users\\rons9\\OneDrive\\Área de Trabalho\\PROJS\\Portfolio\\Trackr\\src\\components\\Details\\styles.js",[],"C:\\Users\\rons9\\OneDrive\\Área de Trabalho\\PROJS\\Portfolio\\Trackr\\src\\components\\Main\\Form\\Form.jsx",["92"],"import React, { useState, useContext, useEffect } from 'react';\r\nimport { TextField, Typography, Grid, Button, FormControl, InputLabel, Select, MenuItem } from '@material-ui/core';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nimport { useSpeechContext } from '@speechly/react-client';\r\nimport Snackbar from '../../Snackbar/Snackbar';\r\nimport formatDate from '../../../utils/formatDate';\r\nimport { ExpenseTrackerContext } from '../../../context/context';\r\nimport { incomeCategories, expenseCategories } from '../../../constants/categories';\r\nimport useStyles from './styles';\r\n\r\nconst initialState = {\r\n  amount: '',\r\n  category: '',\r\n  type: 'Income',\r\n  date: formatDate(new Date()),\r\n};\r\n\r\nconst NewTransactionForm = () => {\r\n  const classes = useStyles();\r\n  const { addTransaction } = useContext(ExpenseTrackerContext);\r\n  const [formData, setFormData] = useState(initialState);\r\n  const { segment } = useSpeechContext();\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const createTransaction = () => {\r\n    if (Number.isNaN(Number(formData.amount)) || !formData.date.includes('-')) return;\r\n\r\n    if (incomeCategories.map((iC) => iC.type).includes(formData.category)) {\r\n      setFormData({ ...formData, type: 'Income' });\r\n    } else if (expenseCategories.map((iC) => iC.type).includes(formData.category)) {\r\n      setFormData({ ...formData, type: 'Expense' });\r\n    }\r\n\r\n    setOpen(true);\r\n    addTransaction({ ...formData, amount: Number(formData.amount), id: uuidv4() });\r\n    setFormData(initialState);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (segment) {\r\n      if (segment.intent.intent === 'add_expense') {\r\n        setFormData({ ...formData, type: 'Expense' });\r\n      } else if (segment.intent.intent === 'add_income') {\r\n        setFormData({ ...formData, type: 'Income' });\r\n      } else if (segment.isFinal && segment.intent.intent === 'create_transaction') {\r\n        return createTransaction();\r\n      } else if (segment.isFinal && segment.intent.intent === 'cancel_transaction') {\r\n        return setFormData(initialState);\r\n      }\r\n\r\n      segment.entities.forEach((s) => {\r\n        const category = `${s.value.charAt(0)}${s.value.slice(1).toLowerCase()}`;\r\n\r\n        switch (s.type) {\r\n          case 'amount':\r\n            setFormData({ ...formData, amount: s.value });\r\n            break;\r\n          case 'category':\r\n            if (incomeCategories.map((iC) => iC.type).includes(category)) {\r\n              setFormData({ ...formData, type: 'Income', category });\r\n            } else if (expenseCategories.map((iC) => iC.type).includes(category)) {\r\n              setFormData({ ...formData, type: 'Expense', category });\r\n            }\r\n            break;\r\n          case 'date':\r\n            setFormData({ ...formData, date: s.value });\r\n            break;\r\n          default:\r\n            break;\r\n        }\r\n      });\r\n\r\n      if (segment.isFinal && formData.amount && formData.category && formData.type && formData.date) {\r\n        createTransaction();\r\n      }\r\n    }\r\n  }, [segment]);\r\n\r\n  const selectedCategories = formData.type === 'Income' ? incomeCategories : expenseCategories;\r\n\r\n  return (\r\n    <Grid container spacing={2}>\r\n      <Snackbar open={open} setOpen={setOpen} />\r\n      <Grid item xs={12}>\r\n        <Typography align=\"center\" variant=\"subtitle2\" gutterBottom>\r\n        {segment ? (\r\n        <div className=\"segment\">\r\n          {segment.words.map((w) => w.value).join(\" \")}\r\n        </div>\r\n      ) : null}\r\n         {/* {isSpeaking ? <BigTranscript /> : 'Start adding transactions'}  */}\r\n        </Typography>\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <FormControl fullWidth>\r\n          <InputLabel>Type</InputLabel>\r\n          <Select value={formData.type} onChange={(e) => setFormData({ ...formData, type: e.target.value })}>\r\n            <MenuItem value=\"Income\">Income</MenuItem>\r\n            <MenuItem value=\"Expense\">Expense</MenuItem>\r\n          </Select>\r\n        </FormControl>\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <FormControl fullWidth>\r\n          <InputLabel>Category</InputLabel>\r\n          <Select value={formData.category} onChange={(e) => setFormData({ ...formData, category: e.target.value })}>\r\n            {selectedCategories.map((c) => <MenuItem key={c.type} value={c.type}>{c.type}</MenuItem>)}\r\n          </Select>\r\n        </FormControl>\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <TextField type=\"number\" label=\"Amount\" value={formData.amount} onChange={(e) => setFormData({ ...formData, amount: e.target.value })} fullWidth />\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <TextField fullWidth label=\"Date\" type=\"date\" value={formData.date} onChange={(e) => setFormData({ ...formData, date: formatDate(e.target.value) })} />\r\n      </Grid>\r\n      <Button className={classes.button} variant=\"outlined\" color=\"primary\" fullWidth onClick={createTransaction}>Create</Button>\r\n    </Grid>\r\n  );\r\n};\r\nexport default NewTransactionForm;","C:\\Users\\rons9\\OneDrive\\Área de Trabalho\\PROJS\\Portfolio\\Trackr\\src\\components\\Main\\List\\List.jsx",[],"C:\\Users\\rons9\\OneDrive\\Área de Trabalho\\PROJS\\Portfolio\\Trackr\\src\\components\\Main\\List\\styles.js",[],"C:\\Users\\rons9\\OneDrive\\Área de Trabalho\\PROJS\\Portfolio\\Trackr\\src\\components\\Main\\Form\\styles.js",[],"C:\\Users\\rons9\\OneDrive\\Área de Trabalho\\PROJS\\Portfolio\\Trackr\\src\\constants\\categories.js",[],"C:\\Users\\rons9\\OneDrive\\Área de Trabalho\\PROJS\\Portfolio\\Trackr\\src\\Utils\\formatDate.js",["93"],"export default (date) => {\r\n  const d = new Date(date);\r\n  let month = `${d.getMonth() + 1}`;\r\n  let day = `${d.getDate()}`;\r\n  const year = d.getFullYear();\r\n\r\n  if (month.length < 2) { month = `0${month}`; }\r\n  if (day.length < 2) { day = `0${day}`; }\r\n\r\n  return [year, month, day].join('-');\r\n};",["94","95"],"C:\\Users\\rons9\\OneDrive\\Área de Trabalho\\PROJS\\Portfolio\\Trackr\\src\\useTransactions.js",[],"C:\\Users\\rons9\\OneDrive\\Área de Trabalho\\PROJS\\Portfolio\\Trackr\\src\\components\\InfoCard.jsx",[],"C:\\Users\\rons9\\OneDrive\\Área de Trabalho\\PROJS\\Portfolio\\Trackr\\src\\components\\Snackbar\\Snackbar.jsx",[],"C:\\Users\\rons9\\OneDrive\\Área de Trabalho\\PROJS\\Portfolio\\Trackr\\src\\components\\Snackbar\\styles.js",[],"C:\\Users\\rons9\\OneDrive\\Área de Trabalho\\PROJS\\Portfolio\\Trackr\\src\\components\\index.js",[],"C:\\Users\\rons9\\OneDrive\\Área de Trabalho\\PROJS\\Portfolio\\Trackr\\src\\utils\\formatDate.js",["96"],{"ruleId":"97","replacedBy":"98"},{"ruleId":"99","replacedBy":"100"},{"ruleId":"101","severity":1,"message":"102","line":78,"column":6,"nodeType":"103","endLine":78,"endColumn":15,"suggestions":"104"},{"ruleId":"105","severity":1,"message":"106","line":1,"column":1,"nodeType":"107","endLine":11,"endColumn":3},{"ruleId":"97","replacedBy":"108"},{"ruleId":"99","replacedBy":"109"},{"ruleId":"105","severity":1,"message":"106","line":1,"column":1,"nodeType":"107","endLine":11,"endColumn":3},"no-native-reassign",["110"],"no-negated-in-lhs",["111"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'createTransaction' and 'formData'. Either include them or remove the dependency array. You can also do a functional update 'setFormData(f => ...)' if you only need 'formData' in the 'setFormData' call.","ArrayExpression",["112"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration",["110"],["111"],"no-global-assign","no-unsafe-negation",{"desc":"113","fix":"114"},"Update the dependencies array to be: [createTransaction, formData, segment]",{"range":"115","text":"116"},[3006,3015],"[createTransaction, formData, segment]"]